{"version":3,"sources":["Home.js","PokeDex.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","text","setText","isReady","setIsReady","push","useHistory","className","hidden","src","alt","style","padding","onClick","type","name","value","onChange","e","target","color","PokeDex","pokemons","setPokemons","pokemonDetail","setPokemonDetail","isLoading","setIsLoading","search","setSearch","sort","setSort","useEffect","fetchData","axios","get","response","data","results","console","log","handlePokemonClick","item","url","length","height","width","trim","filter","x","includes","a","b","filteredData","map","index","id","isOpen","contentLabel","onRequestClose","content","top","left","right","bottom","marginRight","transform","background","overlay","backgroundColor","display","sprites","front_default","head","stats","row","i","base_stat","stat","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3567b34d.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [text, setText] = useState(\"\");\r\n  const [isReady, setIsReady] = useState(false);\r\n  const { push } = useHistory();\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    setText(value);\r\n    setIsReady(value === \"Ready!\" ? true : false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img\r\n          hidden={!isReady}\r\n          src=\"https://www.freeiconspng.com/uploads/file-pokeball-png-0.png\"\r\n          className=\"App-logo\"\r\n          alt=\"logo\"\r\n          style={{ padding: \"10px\" }}\r\n          onClick={() => push(\"/pokedex\")}\r\n        />\r\n        {!isReady && (\r\n          <b>\r\n            Requirement: Try to show the hidden image and make it clickable that\r\n            goes to /pokedex when the input below is \"Ready!\" remember to hide\r\n            the red text away when \"Ready!\" is in the textbox.\r\n          </b>\r\n        )}\r\n        <p>Are you ready to be a pokemon master?</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={text}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n        {!isReady && <span style={{ color: \"red\" }}>I am not ready yet!</span>}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.css\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-modal\";\r\nimport BarChart from \"./barchart\";\r\n\r\nfunction PokeDex() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [pokemonDetail, setPokemonDetail] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sort, setSort] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(\"https://pokeapi.co/api/v2/pokemon\");\r\n        setPokemons(response.data?.results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const handlePokemonClick = async (item) => {\r\n    try {\r\n      const response = await axios.get(item.url);\r\n      setPokemonDetail(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const filteredData = () => {\r\n    let data = [...pokemons];\r\n    if (search && search.trim()) {\r\n      data = data.filter((x) => x.name.includes(search.trim()));\r\n    }\r\n    if (sort === \"asc\") {\r\n      data.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\r\n    }\r\n    if (sort === \"desc\") {\r\n      data.sort((b, a) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\r\n    }\r\n    return data;\r\n  };\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      background: \"black\",\r\n      color: \"white\",\r\n    },\r\n    overlay: { backgroundColor: \"grey\" },\r\n  };\r\n\r\n  if (!isLoading && pokemons.length === 0) {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <h1>Welcome to pokedex !</h1>\r\n          <h2>Requirement:</h2>\r\n          <ul>\r\n            <li>\r\n              Call this api:https://pokeapi.co/api/v2/pokemon to get pokedex,\r\n              and show a list of pokemon name.\r\n            </li>\r\n            <li>Implement React Loading and show it during API call</li>\r\n            <li>\r\n              when hover on the list item , change the item color to yellow.\r\n            </li>\r\n            <li>when clicked the list item, show the modal below</li>\r\n            <li>\r\n              Add a search bar on top of the bar for searching, search will run\r\n              on keyup event\r\n            </li>\r\n            <li>Implement sorting and pagingation</li>\r\n            <li>Commit your codes after done</li>\r\n            <li>\r\n              If you do more than expected (E.g redesign the page / create a\r\n              chat feature at the bottom right). it would be good.\r\n            </li>\r\n          </ul>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        {isLoading ? (\r\n          <>\r\n            <div className=\"App\">\r\n              <header className=\"App-header\">\r\n                <ReactLoading\r\n                  type={\"balls\"}\r\n                  color={\"#ffffff\"}\r\n                  height={\"20%\"}\r\n                  width={\"20%\"}\r\n                />\r\n              </header>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Welcome to pokedex !</h1>\r\n            <input\r\n              type=\"search\"\r\n              name=\"name\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <b onClick={() => setSort(sort === \"asc\" ? \"desc\" : \"asc\")}>\r\n              Pokedex list\r\n            </b>\r\n            {filteredData().map((item, index) => {\r\n              return (\r\n                <div\r\n                  id=\"cspace\"\r\n                  key={`${item.name}-${index}`}\r\n                  onClick={() => handlePokemonClick(item)}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </header>\r\n      {pokemonDetail && (\r\n        <Modal\r\n          isOpen={!!pokemonDetail}\r\n          contentLabel={pokemonDetail?.name || \"\"}\r\n          onRequestClose={() => {\r\n            setPokemonDetail(null);\r\n          }}\r\n          style={customStyles}\r\n        >\r\n          <>\r\n            <div style={{ display: \"flex\" }}>\r\n              <img\r\n                alt={pokemonDetail?.name || \"\"}\r\n                src={pokemonDetail.sprites?.front_default}\r\n                style={{ padding: \"10px\" }}\r\n              />\r\n              <table style={{ width: 900 }}>\r\n                <thead>\r\n                  <tr>\r\n                    {[\"Base stat\", \"Name\"].map((head) => (\r\n                      <th key={head}>{head}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pokemonDetail.stats.map((row, i) => (\r\n                    <tr key={i}>\r\n                      <th key={`${i}-${row.base_stat}`}>{row.base_stat}</th>\r\n                      <th key={`${i}-${row.base_stat}`}>{row.stat.name}</th>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* <BarChart /> */}\r\n            Requirement:\r\n            <ul>\r\n              <li>show the sprites front_default as the pokemon image</li>\r\n              <li>\r\n                Show the stats details - only stat.name and base_stat is\r\n                required in tabular format\r\n              </li>\r\n              <li>Create a bar chart based on the stats above</li>\r\n              <li>\r\n                Create a buttton to download the information generated in this\r\n                modal as pdf. (images and chart must be included)\r\n              </li>\r\n            </ul>\r\n          </>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokeDex;\r\n","import \"./App.css\";\r\nimport Home from \"./Home\";\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport PokeDex from \"./PokeDex\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route path=\"/pokedex\" component={PokeDex} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}